{
	"info": {
		"_postman_id": "9765fead-87ea-4634-9a19-938241358957",
		"name": "UsersCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let userResp = JSON.parse(responseBody)\r",
							"console.log(userResp)\r",
							"let name = userResp.data.name\r",
							"let id = userResp.data.id\r",
							"let emailId= userResp.data.email\r",
							"let gender = userResp.data.gender\r",
							"console.log(name,id, emailId, gender)\r",
							"pm.environment.set('emailId', emailId)\r",
							"pm.environment.set('id', id)\r",
							"pm.environment.set('name', name)\r",
							"pm.environment.set('gender', gender)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomEmail(){\r",
							"let chars = 'abcdefghijklmnopqrstuvwxyz123';\r",
							"email = chars[Math.floor(Math.random()*29)] + Math.random().toString(36).substring(2,11) + '@gmail.com';\r",
							" return email\r",
							"}\r",
							"let emailId = randomEmail();\r",
							"pm.environment.set('emailId', emailId)\r",
							"\r",
							"// let genderlist = ['male', 'female'];\r",
							"// let gender = genderlist[Math.floor(Math.random()*genderlist.length)];\r",
							"// pm.environment.set('gender', gender)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"email\": \"{{emailId}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"status\": \"active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v1/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let userResp = JSON.parse(responseBody)\r",
							"console.log(userResp)\r",
							"let name = userResp.data.name\r",
							"let id = userResp.data.id\r",
							"let emailId= userResp.data.email\r",
							"let gender = userResp.data.gender\r",
							"console.log(name,id, emailId, gender)\r",
							"\r",
							"pm.test(\"Status is active\", function () {\r",
							"    // pm.response.to.have.status(200);\r",
							"    pm.expect(userResp.data.status).to.eql(\"active\"); \r",
							"    pm.expect(pm.response.code).to.eql(200)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {  \r",
							"    pm.expect(pm.response.code).to.eql(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v1/users/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateUserEmailID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let userResp = JSON.parse(responseBody)\r",
							"let name = userResp.data.name\r",
							"let id = userResp.data.id\r",
							"let emailId= userResp.data.email\r",
							"let gender = userResp.data.gender\r",
							"console.log(name,id, emailId, gender)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"status\": \"active\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v1/users/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllUsers",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v1/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v1/users/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer ",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v1/users/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v1",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}